diff --git a/sklearn/cluster/birch.py b/sklearn/cluster/birch.py
index d2dcd8d9a..5583b7a86 100644
--- a/sklearn/cluster/birch.py
+++ b/sklearn/cluster/birch.py
@@ -623,10 +623,11 @@ class Birch(BaseEstimator, TransformerMixin, ClusterMixin):
         if clusterer is None or not_enough_centroids:
             self.subcluster_labels_ = np.arange(len(centroids))
             if not_enough_centroids:
+                from sklearn.exceptions import ConvergenceWarning
                 warnings.warn(
                     "Number of subclusters found (%d) by Birch is less "
                     "than (%d). Decrease the threshold."
-                    % (len(centroids), self.n_clusters))
+                    % (len(centroids), self.n_clusters), ConvergenceWarning)
         else:
             # The global clustering step that clusters the subclusters of
             # the leaves. It assumes the centroids of the subclusters as
diff --git a/sklearn/decomposition/fastica_.py b/sklearn/decomposition/fastica_.py
index f4f6eb3a0..5b1c07a8e 100644
--- a/sklearn/decomposition/fastica_.py
+++ b/sklearn/decomposition/fastica_.py
@@ -115,8 +115,9 @@ def _ica_par(X, tol, g, fun_args, max_iter, w_init):
         if lim < tol:
             break
     else:
+        from sklearn.exceptions import ConvergenceWarning
         warnings.warn('FastICA did not converge. Consider increasing '
-                      'tolerance or the maximum number of iterations.')
+                      'tolerance or the maximum number of iterations.', ConvergenceWarning)
 
     return W, ii + 1
 
