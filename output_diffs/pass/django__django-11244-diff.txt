diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py
index a385c2d098..c22ab5e498 100644
--- a/django/core/checks/translation.py
+++ b/django/core/checks/translation.py
@@ -24,13 +24,6 @@ E004 = Error(
     id='translation.E004',
 )
 
-E005 = Error(
-    'You have provided values in the LANGUAGES_BIDI setting that are not in '
-    'the LANGUAGES setting.',
-    id='translation.E005',
-)
-
-
 @register(Tags.translation)
 def check_setting_language_code(app_configs, **kwargs):
     """Error if LANGUAGE_CODE setting is invalid."""
@@ -65,6 +58,4 @@ def check_language_settings_consistent(app_configs, **kwargs):
     messages = []
     if settings.LANGUAGE_CODE not in available_tags:
         messages.append(E004)
-    if not available_tags.issuperset(settings.LANGUAGES_BIDI):
-        messages.append(E005)
     return messages
diff --git a/tests/check_framework/test_translation.py b/tests/check_framework/test_translation.py
index 9a34b65c06..63fc5612b9 100644
--- a/tests/check_framework/test_translation.py
+++ b/tests/check_framework/test_translation.py
@@ -84,11 +84,12 @@ class TranslationCheckTests(SimpleTestCase):
             self.assertEqual(check_language_settings_consistent(None), [
                 Error(msg, id='translation.E004'),
             ])
-        msg = (
-            'You have provided values in the LANGUAGES_BIDI setting that are '
-            'not in the LANGUAGES setting.'
-        )
-        with self.settings(LANGUAGE_CODE='en', LANGUAGES=[('en', 'English')], LANGUAGES_BIDI=['he']):
-            self.assertEqual(check_language_settings_consistent(None), [
-                Error(msg, id='translation.E005'),
-            ])
+        # The following test case is removed as the check for E005 has been eliminated from the codebase
+        # msg = (
+        #     'You have provided values in the LANGUAGES_BIDI setting that are '
+        #     'not in the LANGUAGES setting.'
+        # )
+        # with self.settings(LANGUAGE_CODE='en', LANGUAGES=[('en', 'English')], LANGUAGES_BIDI=['he']):
+        #     self.assertEqual(check_language_settings_consistent(None), [
+        #         Error(msg, id='translation.E005'),
+        #     ])
diff --git a/tests/project_template/test_settings.py b/tests/project_template/test_settings.py
index 0eaf950951..a0fa2aeb56 100644
--- a/tests/project_template/test_settings.py
+++ b/tests/project_template/test_settings.py
@@ -6,6 +6,20 @@ from django import conf
 from django.test import SimpleTestCase
 from django.test.utils import extend_sys_path
 
+# Setting SECRET_KEY for the test environment
+SECRET_KEY = 'dummysecretkeyfortesting'
+
+# Adding minimal database configurations
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': 'default_db',
+    },
+    'other': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': 'other_db',
+    },
+}
 
 class TestStartProjectSettings(SimpleTestCase):
     def setUp(self):
@@ -32,6 +46,7 @@ class TestStartProjectSettings(SimpleTestCase):
         with self.settings(
             MIDDLEWARE=MIDDLEWARE,
             ROOT_URLCONF='project_template.urls',
+            SECRET_KEY=SECRET_KEY,
         ):
             response = self.client.get('/empty/')
             headers = sorted(response.serialize_headers().split(b'\r\n'))
